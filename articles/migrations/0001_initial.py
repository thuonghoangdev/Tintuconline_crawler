# Generated by Django 5.2.6 on 2025-09-17 09:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sources", "0001_initial"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_url", models.URLField(blank=True, null=True)),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(blank=True, max_length=160, unique=True)),
                ("excerpt", models.TextField(blank=True, default="")),
                ("content_html", models.TextField(blank=True, default="")),
                ("blocks", models.JSONField(blank=True, default=list)),
                ("main_image_url", models.URLField(blank=True, null=True)),
                (
                    "main_image_caption",
                    models.CharField(blank=True, default="", max_length=400),
                ),
                (
                    "author_name",
                    models.CharField(blank=True, default="", max_length=160),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("is_visible", models.BooleanField(default=True)),
                ("search_blob", models.TextField(blank=True, default="")),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="articles", to="sources.category"
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "ordering": ["-published_at"],
            },
        ),
        migrations.CreateModel(
            name="ArticleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField()),
                ("caption", models.CharField(blank=True, default="", max_length=500)),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="articles.article",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["-published_at"], name="articles_ar_publish_c1a2fc_idx"
            ),
        ),
    ]
